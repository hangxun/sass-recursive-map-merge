/* ==========================================================================
   Import test library and function to be tested.
   ========================================================================== */

@import "sassytester/sass/SassyTester";
@import "recursive-map-merge";

/* ==========================================================================
   Set up test cases.
   ========================================================================== */

/* Variables for type checking.
   ========================================================================== */
$string: "string";
$number: 42;
$bool: true;
$color: #323232;
$list: (1 2 3);
$map: (
	1: 1,
	2: 2
);
$null: null;

/* One-dimensional maps.
   ========================================================================== */
$test1a: (
	1: 1,
	2: 2
);
$test1b: (
	3: 3,
	4: 4
);
$test1result: map-merge($test1a, $test1b);
$test2a: ();
$test2b: (
	1: 1,
	2: 2
);
$test2result: map-merge($test2a, $test2b);
$test3a: (
	1: 1,
	2: 2
);
$test3b: ();
$test3result: map-merge($test3a, $test3b);
$test4a: ();
$test4b: ();
$test4result: ();
$test5a: (
	1: 1,
	2: 2
);
$test5b: (
	1: 1,
	4: 4
);
$test5result: map-merge($test5a, $test5b);

/* Two-dimensional maps.
   ========================================================================== */
$test6a: (
	1: (
		1: 1,
		2: 2
	),
	2: 2
);
$test6b: (
	3: (
		1: 1,
		2: 2
	),
	4: 4
);
$test6result: map-merge($test6a, $test6b);
$test7a: (
	1: (
		1: 1,
		2: 2
	)
);
$test7b: (
	1: (
		3: 3,
		4: 4
	)
);
$test7result: (
	1: (
		map-merge(map-get($test7a, 1), map-get($test7b, 1))
	)
);
$test8a: (
	1: (
		1: 1,
		2: 2
	)
);
$test8b: (
	1: (
		2: 2,
		3: 3
	)
);
$test8result: (
	1: (
		map-merge(map-get($test8a, 1), map-get($test8b, 1))
	)
);
$test9a: (
	1: (
		1: 1,
		2: 2
	)
);
$test9b: (
	1: $string
);
$test9result: (
	1: $null
);
$tests-recursive-map-merge: (
	($string, $string): $null,
	($string, $number): $null,
	($string, $bool): $null,
	($string, $color): $null,
	($string, $list): $null,
	($string, $map): $null,
	($string, $null): $null,
	($number, $string): $null,
	($number, $number): $null,
	($number, $bool): $null,
	($number, $color): $null,
	($number, $list): $null,
	($number, $map): $null,
	($number, $null): $null,
	($bool, $string): $null,
	($bool, $number): $null,
	($bool, $bool): $null,
	($bool, $color): $null,
	($bool, $list): $null,
	($bool, $map): $null,
	($bool, $null): $null,
	($color, $string): $null,
	($color, $number): $null,
	($color, $bool): $null,
	($color, $color): $null,
	($color, $list): $null,
	($color, $map): $null,
	($color, $null): $null,
	($list, $string): $null,
	($list, $number): $null,
	($list, $bool): $null,
	($list, $color): $null,
	($list, $list): $null,
	($list, $map): $null,
	($list, $null): $null,
	($map, $string): $null,
	($map, $number): $null,
	($map, $bool): $null,
	($map, $color): $null,
	($map, $list): $null,
	($map, $map): map-merge($map, $map),
	($map, $null): $null,
	($null, $string): $null,
	($null, $number): $null,
	($null, $bool): $null,
	($null, $color): $null,
	($null, $list): $null,
	($null, $map): $null,
	($null, $null): $null,
	($test1a, $test1b): $test1result,
	($test2a, $test2b): $test2result,
	($test3a, $test3b): $test3result,
	($test4a, $test4b): $test4result,
	($test5a, $test5b): $test5result,
	($test6a, $test6b): $test6result,
	($test7a, $test7b): $test7result,
	($test8a, $test8b): $test8result,
	($test9a, $test9b): $test9result
);

@include run(test("recursive-map-merge", $tests-recursive-map-merge));
